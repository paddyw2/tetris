
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea06aab5 	b	1b2adc <main>

Disassembly of section .text:

001b2650 <EnableJTAG>:
  1b2650:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  1b2654:	e59f0064 	ldr	r0, [pc, #100]	; 1b26c0 <dowaitloop+0xc>
  1b2658:	e0211001 	eor	r1, r1, r1
  1b265c:	e5801000 	str	r1, [r0]
  1b2660:	eb000012 	bl	1b26b0 <dowait>
  1b2664:	e59f0058 	ldr	r0, [pc, #88]	; 1b26c4 <dowaitloop+0x10>
  1b2668:	e59f1058 	ldr	r1, [pc, #88]	; 1b26c8 <dowaitloop+0x14>
  1b266c:	e5801000 	str	r1, [r0]
  1b2670:	eb00000e 	bl	1b26b0 <dowait>
  1b2674:	e0211001 	eor	r1, r1, r1
  1b2678:	e5801000 	str	r1, [r0]
  1b267c:	e59f0048 	ldr	r0, [pc, #72]	; 1b26cc <dowaitloop+0x18>
  1b2680:	e5901000 	ldr	r1, [r0]
  1b2684:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
  1b2688:	e3811a02 	orr	r1, r1, #8192	; 0x2000
  1b268c:	e5801000 	str	r1, [r0]
  1b2690:	e59f0038 	ldr	r0, [pc, #56]	; 1b26d0 <dowaitloop+0x1c>
  1b2694:	e5901000 	ldr	r1, [r0]
  1b2698:	e59f2034 	ldr	r2, [pc, #52]	; 1b26d4 <dowaitloop+0x20>
  1b269c:	e1c11002 	bic	r1, r1, r2
  1b26a0:	e59f2030 	ldr	r2, [pc, #48]	; 1b26d8 <dowaitloop+0x24>
  1b26a4:	e1811002 	orr	r1, r1, r2
  1b26a8:	e5801000 	str	r1, [r0]
  1b26ac:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

001b26b0 <dowait>:
  1b26b0:	e3a02f4b 	mov	r2, #300	; 0x12c

001b26b4 <dowaitloop>:
  1b26b4:	e2522001 	subs	r2, r2, #1
  1b26b8:	1afffffd 	bne	1b26b4 <dowaitloop>
  1b26bc:	e12fff1e 	bx	lr
  1b26c0:	3f200094 	.word	0x3f200094
  1b26c4:	3f200098 	.word	0x3f200098
  1b26c8:	0bc00010 	.word	0x0bc00010
  1b26cc:	3f200000 	.word	0x3f200000
  1b26d0:	3f200008 	.word	0x3f200008
  1b26d4:	00e3ffc0 	.word	0x00e3ffc0
  1b26d8:	0061b6c0 	.word	0x0061b6c0

001b26dc <InitFrameBuffer>:
  1b26dc:	e59f2068 	ldr	r2, [pc, #104]	; 1b274c <pointerWaitLoop$+0x1c>
  1b26e0:	e59f3068 	ldr	r3, [pc, #104]	; 1b2750 <pointerWaitLoop$+0x20>

001b26e4 <mBoxFullLoop$>:
  1b26e4:	e5920018 	ldr	r0, [r2, #24]
  1b26e8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
  1b26ec:	1afffffc 	bne	1b26e4 <mBoxFullLoop$>
  1b26f0:	e2830101 	add	r0, r3, #1073741824	; 0x40000000
  1b26f4:	e3800008 	orr	r0, r0, #8
  1b26f8:	e5820020 	str	r0, [r2, #32]

001b26fc <mBoxEmptyLoop$>:
  1b26fc:	e5920018 	ldr	r0, [r2, #24]
  1b2700:	e3100101 	tst	r0, #1073741824	; 0x40000000
  1b2704:	1afffffc 	bne	1b26fc <mBoxEmptyLoop$>
  1b2708:	e5920000 	ldr	r0, [r2]
  1b270c:	e200100f 	and	r1, r0, #15
  1b2710:	e3310008 	teq	r1, #8
  1b2714:	1afffff8 	bne	1b26fc <mBoxEmptyLoop$>
  1b2718:	e59f0030 	ldr	r0, [pc, #48]	; 1b2750 <pointerWaitLoop$+0x20>
  1b271c:	e5901004 	ldr	r1, [r0, #4]
  1b2720:	e3310102 	teq	r1, #-2147483648	; 0x80000000
  1b2724:	0a000001 	beq	1b2730 <pointerWaitLoop$>
  1b2728:	13a00000 	movne	r0, #0
  1b272c:	112fff1e 	bxne	lr

001b2730 <pointerWaitLoop$>:
  1b2730:	e59f001c 	ldr	r0, [pc, #28]	; 1b2754 <pointerWaitLoop$+0x24>
  1b2734:	e5900000 	ldr	r0, [r0]
  1b2738:	e3300000 	teq	r0, #0
  1b273c:	0afffffb 	beq	1b2730 <pointerWaitLoop$>
  1b2740:	e59f3010 	ldr	r3, [pc, #16]	; 1b2758 <pointerWaitLoop$+0x28>
  1b2744:	e5830000 	str	r0, [r3]
  1b2748:	e12fff1e 	bx	lr
  1b274c:	3f00b880 	.word	0x3f00b880
  1b2750:	00009080 	.word	0x00009080
  1b2754:	000090cc 	.word	0x000090cc
  1b2758:	000090e0 	.word	0x000090e0

001b275c <clearScreen>:
  1b275c:	e1a0300e 	mov	r3, lr
  1b2760:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  1b2764:	e3a08b01 	mov	r8, #1024	; 0x400
  1b2768:	e3a09c03 	mov	r9, #768	; 0x300
  1b276c:	e3a05000 	mov	r5, #0
  1b2770:	e3a06000 	mov	r6, #0
  1b2774:	eb000001 	bl	1b2780 <drawBlock>
  1b2778:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  1b277c:	e1a0f003 	mov	pc, r3

001b2780 <drawBlock>:
  1b2780:	e1a0300e 	mov	r3, lr
  1b2784:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  1b2788:	e0899005 	add	r9, r9, r5

001b278c <cs_drawHeight>:
  1b278c:	e1550009 	cmp	r5, r9
  1b2790:	0a00000b 	beq	1b27c4 <cs_totalEnd>
  1b2794:	e52d6004 	push	{r6}		; (str r6, [sp, #-4]!)

001b2798 <cs_drawLoop>:
  1b2798:	e1560008 	cmp	r6, r8
  1b279c:	0a000005 	beq	1b27b8 <cs_endLoop>
  1b27a0:	e1a00006 	mov	r0, r6
  1b27a4:	e1a01005 	mov	r1, r5
  1b27a8:	e1a02007 	mov	r2, r7
  1b27ac:	eb00001e 	bl	1b282c <DrawPixel>
  1b27b0:	e2866001 	add	r6, r6, #1
  1b27b4:	eafffff7 	b	1b2798 <cs_drawLoop>

001b27b8 <cs_endLoop>:
  1b27b8:	e2855001 	add	r5, r5, #1
  1b27bc:	e49d6004 	pop	{r6}		; (ldr r6, [sp], #4)
  1b27c0:	eafffff1 	b	1b278c <cs_drawHeight>

001b27c4 <cs_totalEnd>:
  1b27c4:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  1b27c8:	e1a0f003 	mov	pc, r3

001b27cc <drawImage>:
  1b27cc:	e1a0600e 	mov	r6, lr
  1b27d0:	e52d6004 	push	{r6}		; (str r6, [sp, #-4]!)
  1b27d4:	e1a07000 	mov	r7, r0
  1b27d8:	e3a06000 	mov	r6, #0

001b27dc <di_drawOuter>:
  1b27dc:	e1560005 	cmp	r6, r5
  1b27e0:	0a00000e 	beq	1b2820 <di_end>
  1b27e4:	e52d6004 	push	{r6}		; (str r6, [sp, #-4]!)
  1b27e8:	e3a06000 	mov	r6, #0

001b27ec <di_drawInner>:
  1b27ec:	e1560004 	cmp	r6, r4
  1b27f0:	0a000006 	beq	1b2810 <di_endDraw>
  1b27f4:	e1d320b0 	ldrh	r2, [r3]
  1b27f8:	eb00000b 	bl	1b282c <DrawPixel>
  1b27fc:	e2833002 	add	r3, r3, #2
  1b2800:	e2866001 	add	r6, r6, #1
  1b2804:	e1a00006 	mov	r0, r6
  1b2808:	e0800007 	add	r0, r0, r7
  1b280c:	eafffff6 	b	1b27ec <di_drawInner>

001b2810 <di_endDraw>:
  1b2810:	e49d6004 	pop	{r6}		; (ldr r6, [sp], #4)
  1b2814:	e2811001 	add	r1, r1, #1
  1b2818:	e2866001 	add	r6, r6, #1
  1b281c:	eaffffee 	b	1b27dc <di_drawOuter>

001b2820 <di_end>:
  1b2820:	e1a0c002 	mov	ip, r2
  1b2824:	e49d6004 	pop	{r6}		; (ldr r6, [sp], #4)
  1b2828:	e1a0f006 	mov	pc, r6

001b282c <DrawPixel>:
  1b282c:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
  1b2830:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  1b2834:	e59f3028 	ldr	r3, [pc, #40]	; 1b2864 <dp_skipPrint+0xc>
  1b2838:	e1d330b0 	ldrh	r3, [r3]
  1b283c:	e1520003 	cmp	r2, r3
  1b2840:	0a000004 	beq	1b2858 <dp_skipPrint>
  1b2844:	e0804501 	add	r4, r0, r1, lsl #10
  1b2848:	e1a04084 	lsl	r4, r4, #1
  1b284c:	e59f0014 	ldr	r0, [pc, #20]	; 1b2868 <dp_skipPrint+0x10>
  1b2850:	e5900000 	ldr	r0, [r0]
  1b2854:	e18020b4 	strh	r2, [r0, r4]

001b2858 <dp_skipPrint>:
  1b2858:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  1b285c:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
  1b2860:	e12fff1e 	bx	lr
  1b2864:	000090f0 	.word	0x000090f0
  1b2868:	000090e0 	.word	0x000090e0

001b286c <drawString>:
  1b286c:	e1a0100e 	mov	r1, lr
  1b2870:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
  1b2874:	e3a08000 	mov	r8, #0

001b2878 <ds_drawStrLoop>:
  1b2878:	e1580007 	cmp	r8, r7
  1b287c:	0a000005 	beq	1b2898 <ds_endDrawLoop>
  1b2880:	e5d30000 	ldrb	r0, [r3]
  1b2884:	eb000005 	bl	1b28a0 <DrawChar>
  1b2888:	e2833001 	add	r3, r3, #1
  1b288c:	e2888001 	add	r8, r8, #1
  1b2890:	e289900a 	add	r9, r9, #10
  1b2894:	eafffff7 	b	1b2878 <ds_drawStrLoop>

001b2898 <ds_endDrawLoop>:
  1b2898:	e49d1004 	pop	{r1}		; (ldr r1, [sp], #4)
  1b289c:	e1a0f001 	mov	pc, r1

001b28a0 <DrawChar>:
  1b28a0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  1b28a4:	e59f4044 	ldr	r4, [pc, #68]	; 1b28f0 <noPixel$+0x20>
  1b28a8:	e0844200 	add	r4, r4, r0, lsl #4

001b28ac <charLoop$>:
  1b28ac:	e1a05009 	mov	r5, r9
  1b28b0:	e3a08001 	mov	r8, #1
  1b28b4:	e4d47001 	ldrb	r7, [r4], #1

001b28b8 <rowLoop$>:
  1b28b8:	e1170008 	tst	r7, r8
  1b28bc:	0a000003 	beq	1b28d0 <noPixel$>
  1b28c0:	e1a00005 	mov	r0, r5
  1b28c4:	e1a01006 	mov	r1, r6
  1b28c8:	e1a0200a 	mov	r2, sl
  1b28cc:	ebffffd6 	bl	1b282c <DrawPixel>

001b28d0 <noPixel$>:
  1b28d0:	e2855001 	add	r5, r5, #1
  1b28d4:	e1a08088 	lsl	r8, r8, #1
  1b28d8:	e3180c01 	tst	r8, #256	; 0x100
  1b28dc:	0afffff5 	beq	1b28b8 <rowLoop$>
  1b28e0:	e2866001 	add	r6, r6, #1
  1b28e4:	e314000f 	tst	r4, #15
  1b28e8:	1affffef 	bne	1b28ac <charLoop$>
  1b28ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
  1b28f0:	00009100 	.word	0x00009100

001b28f4 <Set_Lines>:
  1b28f4:	e1a0300e 	mov	r3, lr
  1b28f8:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  1b28fc:	e3a04009 	mov	r4, #9
  1b2900:	e3a05001 	mov	r5, #1
  1b2904:	eb000007 	bl	1b2928 <Init_GPIO>
  1b2908:	e3a0400a 	mov	r4, #10
  1b290c:	e3a05000 	mov	r5, #0
  1b2910:	eb000004 	bl	1b2928 <Init_GPIO>
  1b2914:	e3a0400b 	mov	r4, #11
  1b2918:	e3a05001 	mov	r5, #1
  1b291c:	eb000001 	bl	1b2928 <Init_GPIO>
  1b2920:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  1b2924:	e1a0f003 	mov	pc, r3

001b2928 <Init_GPIO>:
  1b2928:	e1a0300e 	mov	r3, lr
  1b292c:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  1b2930:	e3a06000 	mov	r6, #0
  1b2934:	e1a07004 	mov	r7, r4

001b2938 <getModTen>:
  1b2938:	e254400a 	subs	r4, r4, #10
  1b293c:	ba000002 	blt	1b294c <finishedMod>
  1b2940:	e2866001 	add	r6, r6, #1
  1b2944:	e1a07004 	mov	r7, r4
  1b2948:	eafffffa 	b	1b2938 <getModTen>

001b294c <finishedMod>:
  1b294c:	e1a06106 	lsl	r6, r6, #2
  1b2950:	e0877087 	add	r7, r7, r7, lsl #1
  1b2954:	e59f0178 	ldr	r0, [pc, #376]	; 1b2ad4 <Read_SNES+0x30>
  1b2958:	e0800006 	add	r0, r0, r6
  1b295c:	e5901000 	ldr	r1, [r0]
  1b2960:	e3a02007 	mov	r2, #7
  1b2964:	e1c11712 	bic	r1, r1, r2, lsl r7
  1b2968:	e1a02005 	mov	r2, r5
  1b296c:	e1811712 	orr	r1, r1, r2, lsl r7
  1b2970:	e5801000 	str	r1, [r0]
  1b2974:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  1b2978:	e1a0f003 	mov	pc, r3

001b297c <Read_Data>:
  1b297c:	e1a0300e 	mov	r3, lr
  1b2980:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  1b2984:	e3a09000 	mov	r9, #0
  1b2988:	e3a0501c 	mov	r5, #28
  1b298c:	eb000026 	bl	1b2a2c <Write_Clock>
  1b2990:	e3a0501c 	mov	r5, #28
  1b2994:	eb00002d 	bl	1b2a50 <Write_Latch>
  1b2998:	e3a0500c 	mov	r5, #12
  1b299c:	eb000034 	bl	1b2a74 <Wait>
  1b29a0:	e3a05028 	mov	r5, #40	; 0x28
  1b29a4:	eb000029 	bl	1b2a50 <Write_Latch>
  1b29a8:	e3a06000 	mov	r6, #0

001b29ac <pulseLoop>:
  1b29ac:	e3560010 	cmp	r6, #16
  1b29b0:	aa00000c 	bge	1b29e8 <endPulseLoop>
  1b29b4:	e3a05006 	mov	r5, #6
  1b29b8:	eb00002d 	bl	1b2a74 <Wait>
  1b29bc:	e3a05028 	mov	r5, #40	; 0x28
  1b29c0:	eb000019 	bl	1b2a2c <Write_Clock>
  1b29c4:	e3a05006 	mov	r5, #6
  1b29c8:	eb000029 	bl	1b2a74 <Wait>
  1b29cc:	eb000034 	bl	1b2aa4 <Read_SNES>
  1b29d0:	e1a05615 	lsl	r5, r5, r6
  1b29d4:	e1899005 	orr	r9, r9, r5
  1b29d8:	e2866001 	add	r6, r6, #1
  1b29dc:	e3a0501c 	mov	r5, #28
  1b29e0:	eb000011 	bl	1b2a2c <Write_Clock>
  1b29e4:	eafffff0 	b	1b29ac <pulseLoop>

001b29e8 <endPulseLoop>:
  1b29e8:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  1b29ec:	e1a0f003 	mov	pc, r3

001b29f0 <Check_Buttons>:
  1b29f0:	e1a0300e 	mov	r3, lr
  1b29f4:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  1b29f8:	e1a04009 	mov	r4, r9
  1b29fc:	e3a06000 	mov	r6, #0

001b2a00 <checkButtonLoop>:
  1b2a00:	e3560010 	cmp	r6, #16
  1b2a04:	aa000006 	bge	1b2a24 <finishButtonLoop>
  1b2a08:	e3a05001 	mov	r5, #1
  1b2a0c:	e1a05615 	lsl	r5, r5, r6
  1b2a10:	e1140005 	tst	r4, r5
  1b2a14:	0a000000 	beq	1b2a1c <continueButtonLoop>
  1b2a18:	e12fff32 	blx	r2

001b2a1c <continueButtonLoop>:
  1b2a1c:	e2866001 	add	r6, r6, #1
  1b2a20:	eafffff6 	b	1b2a00 <checkButtonLoop>

001b2a24 <finishButtonLoop>:
  1b2a24:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  1b2a28:	e1a0f003 	mov	pc, r3

001b2a2c <Write_Clock>:
  1b2a2c:	e1a0300e 	mov	r3, lr
  1b2a30:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  1b2a34:	e59f0098 	ldr	r0, [pc, #152]	; 1b2ad4 <Read_SNES+0x30>
  1b2a38:	e0800005 	add	r0, r0, r5
  1b2a3c:	e3a03001 	mov	r3, #1
  1b2a40:	e1a03583 	lsl	r3, r3, #11
  1b2a44:	e5803000 	str	r3, [r0]
  1b2a48:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  1b2a4c:	e1a0f003 	mov	pc, r3

001b2a50 <Write_Latch>:
  1b2a50:	e1a0300e 	mov	r3, lr
  1b2a54:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  1b2a58:	e59f0074 	ldr	r0, [pc, #116]	; 1b2ad4 <Read_SNES+0x30>
  1b2a5c:	e0800005 	add	r0, r0, r5
  1b2a60:	e3a03001 	mov	r3, #1
  1b2a64:	e1a03483 	lsl	r3, r3, #9
  1b2a68:	e5803000 	str	r3, [r0]
  1b2a6c:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  1b2a70:	e1a0f003 	mov	pc, r3

001b2a74 <Wait>:
  1b2a74:	e1a0300e 	mov	r3, lr
  1b2a78:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  1b2a7c:	e59f0054 	ldr	r0, [pc, #84]	; 1b2ad8 <Read_SNES+0x34>
  1b2a80:	e2800004 	add	r0, r0, #4
  1b2a84:	e5903000 	ldr	r3, [r0]
  1b2a88:	e0834005 	add	r4, r3, r5

001b2a8c <cycleLoop>:
  1b2a8c:	e5903000 	ldr	r3, [r0]
  1b2a90:	e1530004 	cmp	r3, r4
  1b2a94:	aa000000 	bge	1b2a9c <cycleFinished>
  1b2a98:	eafffffb 	b	1b2a8c <cycleLoop>

001b2a9c <cycleFinished>:
  1b2a9c:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  1b2aa0:	e1a0f003 	mov	pc, r3

001b2aa4 <Read_SNES>:
  1b2aa4:	e1a0300e 	mov	r3, lr
  1b2aa8:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  1b2aac:	e59f0020 	ldr	r0, [pc, #32]	; 1b2ad4 <Read_SNES+0x30>
  1b2ab0:	e2800034 	add	r0, r0, #52	; 0x34
  1b2ab4:	e5904000 	ldr	r4, [r0]
  1b2ab8:	e3a03001 	mov	r3, #1
  1b2abc:	e1a03503 	lsl	r3, r3, #10
  1b2ac0:	e1130004 	tst	r3, r4
  1b2ac4:	03a05001 	moveq	r5, #1
  1b2ac8:	13a05000 	movne	r5, #0
  1b2acc:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  1b2ad0:	e1a0f003 	mov	pc, r3
  1b2ad4:	3f200000 	.word	0x3f200000
  1b2ad8:	3f003000 	.word	0x3f003000

001b2adc <main>:
  1b2adc:	e3a0d902 	mov	sp, #32768	; 0x8000
  1b2ae0:	ebfffeda 	bl	1b2650 <EnableJTAG>
  1b2ae4:	ebfffefc 	bl	1b26dc <InitFrameBuffer>
  1b2ae8:	e3a07000 	mov	r7, #0
  1b2aec:	ebffff1a 	bl	1b275c <clearScreen>

001b2af0 <Game_Screen>:
  1b2af0:	e59f3090 	ldr	r3, [pc, #144]	; 1b2b88 <printImage+0x3c>
  1b2af4:	e3a01000 	mov	r1, #0
  1b2af8:	e3a00000 	mov	r0, #0
  1b2afc:	e3a04b01 	mov	r4, #1024	; 0x400
  1b2b00:	e3a05c03 	mov	r5, #768	; 0x300
  1b2b04:	ebffff30 	bl	1b27cc <drawImage>
  1b2b08:	e59f307c 	ldr	r3, [pc, #124]	; 1b2b8c <printImage+0x40>
  1b2b0c:	e3a0107d 	mov	r1, #125	; 0x7d
  1b2b10:	e3a00f5f 	mov	r0, #380	; 0x17c
  1b2b14:	e3a040c8 	mov	r4, #200	; 0xc8
  1b2b18:	e3a050c8 	mov	r5, #200	; 0xc8
  1b2b1c:	ebffff2a 	bl	1b27cc <drawImage>

001b2b20 <Move_Image>:
  1b2b20:	ebffff73 	bl	1b28f4 <Set_Lines>
  1b2b24:	e3a09000 	mov	r9, #0

001b2b28 <Loop_SNES_Input>:
  1b2b28:	e52d9004 	push	{r9}		; (str r9, [sp, #-4]!)
  1b2b2c:	ebffff92 	bl	1b297c <Read_Data>
  1b2b30:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  1b2b34:	e1530009 	cmp	r3, r9
  1b2b38:	0afffffa 	beq	1b2b28 <Loop_SNES_Input>
  1b2b3c:	e59f204c 	ldr	r2, [pc, #76]	; 1b2b90 <printImage+0x44>
  1b2b40:	ebffffaa 	bl	1b29f0 <Check_Buttons>
  1b2b44:	eafffff7 	b	1b2b28 <Loop_SNES_Input>

001b2b48 <haltLoop$>:
  1b2b48:	eafffffe 	b	1b2b48 <haltLoop$>

001b2b4c <printImage>:
  1b2b4c:	e1a0300e 	mov	r3, lr
  1b2b50:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  1b2b54:	e3560004 	cmp	r6, #4
  1b2b58:	0afffffa 	beq	1b2b48 <haltLoop$>
  1b2b5c:	e3a07000 	mov	r7, #0
  1b2b60:	ebfffefd 	bl	1b275c <clearScreen>
  1b2b64:	e59f3020 	ldr	r3, [pc, #32]	; 1b2b8c <printImage+0x40>
  1b2b68:	e3a0107d 	mov	r1, #125	; 0x7d
  1b2b6c:	e3a00f5f 	mov	r0, #380	; 0x17c
  1b2b70:	e3a040c8 	mov	r4, #200	; 0xc8
  1b2b74:	e3a050c8 	mov	r5, #200	; 0xc8
  1b2b78:	ebffff13 	bl	1b27cc <drawImage>
  1b2b7c:	e3a0c063 	mov	ip, #99	; 0x63
  1b2b80:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  1b2b84:	e1a0f003 	mov	pc, r3
  1b2b88:	0001da3c 	.word	0x0001da3c
  1b2b8c:	0019edc4 	.word	0x0019edc4
  1b2b90:	001b2b4c 	.word	0x001b2b4c
