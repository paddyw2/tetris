
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea061c7c 	b	18f1f8 <main>

Disassembly of section .text:

0018ed6c <EnableJTAG>:
  18ed6c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  18ed70:	e59f0064 	ldr	r0, [pc, #100]	; 18eddc <dowaitloop+0xc>
  18ed74:	e0211001 	eor	r1, r1, r1
  18ed78:	e5801000 	str	r1, [r0]
  18ed7c:	eb000012 	bl	18edcc <dowait>
  18ed80:	e59f0058 	ldr	r0, [pc, #88]	; 18ede0 <dowaitloop+0x10>
  18ed84:	e59f1058 	ldr	r1, [pc, #88]	; 18ede4 <dowaitloop+0x14>
  18ed88:	e5801000 	str	r1, [r0]
  18ed8c:	eb00000e 	bl	18edcc <dowait>
  18ed90:	e0211001 	eor	r1, r1, r1
  18ed94:	e5801000 	str	r1, [r0]
  18ed98:	e59f0048 	ldr	r0, [pc, #72]	; 18ede8 <dowaitloop+0x18>
  18ed9c:	e5901000 	ldr	r1, [r0]
  18eda0:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
  18eda4:	e3811a02 	orr	r1, r1, #8192	; 0x2000
  18eda8:	e5801000 	str	r1, [r0]
  18edac:	e59f0038 	ldr	r0, [pc, #56]	; 18edec <dowaitloop+0x1c>
  18edb0:	e5901000 	ldr	r1, [r0]
  18edb4:	e59f2034 	ldr	r2, [pc, #52]	; 18edf0 <dowaitloop+0x20>
  18edb8:	e1c11002 	bic	r1, r1, r2
  18edbc:	e59f2030 	ldr	r2, [pc, #48]	; 18edf4 <dowaitloop+0x24>
  18edc0:	e1811002 	orr	r1, r1, r2
  18edc4:	e5801000 	str	r1, [r0]
  18edc8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0018edcc <dowait>:
  18edcc:	e3a02f4b 	mov	r2, #300	; 0x12c

0018edd0 <dowaitloop>:
  18edd0:	e2522001 	subs	r2, r2, #1
  18edd4:	1afffffd 	bne	18edd0 <dowaitloop>
  18edd8:	e12fff1e 	bx	lr
  18eddc:	3f200094 	.word	0x3f200094
  18ede0:	3f200098 	.word	0x3f200098
  18ede4:	0bc00010 	.word	0x0bc00010
  18ede8:	3f200000 	.word	0x3f200000
  18edec:	3f200008 	.word	0x3f200008
  18edf0:	00e3ffc0 	.word	0x00e3ffc0
  18edf4:	0061b6c0 	.word	0x0061b6c0

0018edf8 <InitFrameBuffer>:
  18edf8:	e59f2068 	ldr	r2, [pc, #104]	; 18ee68 <pointerWaitLoop$+0x1c>
  18edfc:	e59f3068 	ldr	r3, [pc, #104]	; 18ee6c <pointerWaitLoop$+0x20>

0018ee00 <mBoxFullLoop$>:
  18ee00:	e5920018 	ldr	r0, [r2, #24]
  18ee04:	e3100102 	tst	r0, #-2147483648	; 0x80000000
  18ee08:	1afffffc 	bne	18ee00 <mBoxFullLoop$>
  18ee0c:	e2830101 	add	r0, r3, #1073741824	; 0x40000000
  18ee10:	e3800008 	orr	r0, r0, #8
  18ee14:	e5820020 	str	r0, [r2, #32]

0018ee18 <mBoxEmptyLoop$>:
  18ee18:	e5920018 	ldr	r0, [r2, #24]
  18ee1c:	e3100101 	tst	r0, #1073741824	; 0x40000000
  18ee20:	1afffffc 	bne	18ee18 <mBoxEmptyLoop$>
  18ee24:	e5920000 	ldr	r0, [r2]
  18ee28:	e200100f 	and	r1, r0, #15
  18ee2c:	e3310008 	teq	r1, #8
  18ee30:	1afffff8 	bne	18ee18 <mBoxEmptyLoop$>
  18ee34:	e59f0030 	ldr	r0, [pc, #48]	; 18ee6c <pointerWaitLoop$+0x20>
  18ee38:	e5901004 	ldr	r1, [r0, #4]
  18ee3c:	e3310102 	teq	r1, #-2147483648	; 0x80000000
  18ee40:	0a000001 	beq	18ee4c <pointerWaitLoop$>
  18ee44:	13a00000 	movne	r0, #0
  18ee48:	112fff1e 	bxne	lr

0018ee4c <pointerWaitLoop$>:
  18ee4c:	e59f001c 	ldr	r0, [pc, #28]	; 18ee70 <pointerWaitLoop$+0x24>
  18ee50:	e5900000 	ldr	r0, [r0]
  18ee54:	e3300000 	teq	r0, #0
  18ee58:	0afffffb 	beq	18ee4c <pointerWaitLoop$>
  18ee5c:	e59f3010 	ldr	r3, [pc, #16]	; 18ee74 <pointerWaitLoop$+0x28>
  18ee60:	e5830000 	str	r0, [r3]
  18ee64:	e12fff1e 	bx	lr
  18ee68:	3f00b880 	.word	0x3f00b880
  18ee6c:	00009080 	.word	0x00009080
  18ee70:	000090cc 	.word	0x000090cc
  18ee74:	000090e0 	.word	0x000090e0

0018ee78 <clearScreen>:
  18ee78:	e1a0300e 	mov	r3, lr
  18ee7c:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18ee80:	e3a08b01 	mov	r8, #1024	; 0x400
  18ee84:	e3a09c03 	mov	r9, #768	; 0x300
  18ee88:	e3a05000 	mov	r5, #0
  18ee8c:	e3a06000 	mov	r6, #0
  18ee90:	eb000001 	bl	18ee9c <drawBlock>
  18ee94:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18ee98:	e1a0f003 	mov	pc, r3

0018ee9c <drawBlock>:
  18ee9c:	e1a0300e 	mov	r3, lr
  18eea0:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18eea4:	e0899005 	add	r9, r9, r5

0018eea8 <cs_drawHeight>:
  18eea8:	e1550009 	cmp	r5, r9
  18eeac:	0a00000b 	beq	18eee0 <cs_totalEnd>
  18eeb0:	e52d6004 	push	{r6}		; (str r6, [sp, #-4]!)

0018eeb4 <cs_drawLoop>:
  18eeb4:	e1560008 	cmp	r6, r8
  18eeb8:	0a000005 	beq	18eed4 <cs_endLoop>
  18eebc:	e1a00006 	mov	r0, r6
  18eec0:	e1a01005 	mov	r1, r5
  18eec4:	e1a02007 	mov	r2, r7
  18eec8:	eb00001e 	bl	18ef48 <DrawPixel>
  18eecc:	e2866001 	add	r6, r6, #1
  18eed0:	eafffff7 	b	18eeb4 <cs_drawLoop>

0018eed4 <cs_endLoop>:
  18eed4:	e2855001 	add	r5, r5, #1
  18eed8:	e49d6004 	pop	{r6}		; (ldr r6, [sp], #4)
  18eedc:	eafffff1 	b	18eea8 <cs_drawHeight>

0018eee0 <cs_totalEnd>:
  18eee0:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18eee4:	e1a0f003 	mov	pc, r3

0018eee8 <drawImage>:
  18eee8:	e1a0600e 	mov	r6, lr
  18eeec:	e52d6004 	push	{r6}		; (str r6, [sp, #-4]!)
  18eef0:	e1a07000 	mov	r7, r0
  18eef4:	e3a06000 	mov	r6, #0

0018eef8 <di_drawOuter>:
  18eef8:	e1560005 	cmp	r6, r5
  18eefc:	0a00000e 	beq	18ef3c <di_end>
  18ef00:	e52d6004 	push	{r6}		; (str r6, [sp, #-4]!)
  18ef04:	e3a06000 	mov	r6, #0

0018ef08 <di_drawInner>:
  18ef08:	e1560004 	cmp	r6, r4
  18ef0c:	0a000006 	beq	18ef2c <di_endDraw>
  18ef10:	e1d320b0 	ldrh	r2, [r3]
  18ef14:	eb00000b 	bl	18ef48 <DrawPixel>
  18ef18:	e2833002 	add	r3, r3, #2
  18ef1c:	e2866001 	add	r6, r6, #1
  18ef20:	e1a00006 	mov	r0, r6
  18ef24:	e0800007 	add	r0, r0, r7
  18ef28:	eafffff6 	b	18ef08 <di_drawInner>

0018ef2c <di_endDraw>:
  18ef2c:	e49d6004 	pop	{r6}		; (ldr r6, [sp], #4)
  18ef30:	e2811001 	add	r1, r1, #1
  18ef34:	e2866001 	add	r6, r6, #1
  18ef38:	eaffffee 	b	18eef8 <di_drawOuter>

0018ef3c <di_end>:
  18ef3c:	e1a0c002 	mov	ip, r2
  18ef40:	e49d6004 	pop	{r6}		; (ldr r6, [sp], #4)
  18ef44:	e1a0f006 	mov	pc, r6

0018ef48 <DrawPixel>:
  18ef48:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
  18ef4c:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18ef50:	e59f3028 	ldr	r3, [pc, #40]	; 18ef80 <dp_skipPrint+0xc>
  18ef54:	e1d330b0 	ldrh	r3, [r3]
  18ef58:	e1520003 	cmp	r2, r3
  18ef5c:	0a000004 	beq	18ef74 <dp_skipPrint>
  18ef60:	e0804501 	add	r4, r0, r1, lsl #10
  18ef64:	e1a04084 	lsl	r4, r4, #1
  18ef68:	e59f0014 	ldr	r0, [pc, #20]	; 18ef84 <dp_skipPrint+0x10>
  18ef6c:	e5900000 	ldr	r0, [r0]
  18ef70:	e18020b4 	strh	r2, [r0, r4]

0018ef74 <dp_skipPrint>:
  18ef74:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18ef78:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
  18ef7c:	e12fff1e 	bx	lr
  18ef80:	000090f0 	.word	0x000090f0
  18ef84:	000090e0 	.word	0x000090e0

0018ef88 <drawString>:
  18ef88:	e1a0100e 	mov	r1, lr
  18ef8c:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
  18ef90:	e3a08000 	mov	r8, #0

0018ef94 <ds_drawStrLoop>:
  18ef94:	e1580007 	cmp	r8, r7
  18ef98:	0a000005 	beq	18efb4 <ds_endDrawLoop>
  18ef9c:	e5d30000 	ldrb	r0, [r3]
  18efa0:	eb000005 	bl	18efbc <DrawChar>
  18efa4:	e2833001 	add	r3, r3, #1
  18efa8:	e2888001 	add	r8, r8, #1
  18efac:	e289900a 	add	r9, r9, #10
  18efb0:	eafffff7 	b	18ef94 <ds_drawStrLoop>

0018efb4 <ds_endDrawLoop>:
  18efb4:	e49d1004 	pop	{r1}		; (ldr r1, [sp], #4)
  18efb8:	e1a0f001 	mov	pc, r1

0018efbc <DrawChar>:
  18efbc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  18efc0:	e59f4044 	ldr	r4, [pc, #68]	; 18f00c <noPixel$+0x20>
  18efc4:	e0844200 	add	r4, r4, r0, lsl #4

0018efc8 <charLoop$>:
  18efc8:	e1a05009 	mov	r5, r9
  18efcc:	e3a08001 	mov	r8, #1
  18efd0:	e4d47001 	ldrb	r7, [r4], #1

0018efd4 <rowLoop$>:
  18efd4:	e1170008 	tst	r7, r8
  18efd8:	0a000003 	beq	18efec <noPixel$>
  18efdc:	e1a00005 	mov	r0, r5
  18efe0:	e1a01006 	mov	r1, r6
  18efe4:	e1a0200a 	mov	r2, sl
  18efe8:	ebffffd6 	bl	18ef48 <DrawPixel>

0018efec <noPixel$>:
  18efec:	e2855001 	add	r5, r5, #1
  18eff0:	e1a08088 	lsl	r8, r8, #1
  18eff4:	e3180c01 	tst	r8, #256	; 0x100
  18eff8:	0afffff5 	beq	18efd4 <rowLoop$>
  18effc:	e2866001 	add	r6, r6, #1
  18f000:	e314000f 	tst	r4, #15
  18f004:	1affffef 	bne	18efc8 <charLoop$>
  18f008:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
  18f00c:	00009100 	.word	0x00009100

0018f010 <Set_Lines>:
  18f010:	e1a0300e 	mov	r3, lr
  18f014:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18f018:	e3a04009 	mov	r4, #9
  18f01c:	e3a05001 	mov	r5, #1
  18f020:	eb000007 	bl	18f044 <Init_GPIO>
  18f024:	e3a0400a 	mov	r4, #10
  18f028:	e3a05000 	mov	r5, #0
  18f02c:	eb000004 	bl	18f044 <Init_GPIO>
  18f030:	e3a0400b 	mov	r4, #11
  18f034:	e3a05001 	mov	r5, #1
  18f038:	eb000001 	bl	18f044 <Init_GPIO>
  18f03c:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f040:	e1a0f003 	mov	pc, r3

0018f044 <Init_GPIO>:
  18f044:	e1a0300e 	mov	r3, lr
  18f048:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18f04c:	e3a06000 	mov	r6, #0
  18f050:	e1a07004 	mov	r7, r4

0018f054 <getModTen>:
  18f054:	e254400a 	subs	r4, r4, #10
  18f058:	ba000002 	blt	18f068 <finishedMod>
  18f05c:	e2866001 	add	r6, r6, #1
  18f060:	e1a07004 	mov	r7, r4
  18f064:	eafffffa 	b	18f054 <getModTen>

0018f068 <finishedMod>:
  18f068:	e1a06106 	lsl	r6, r6, #2
  18f06c:	e0877087 	add	r7, r7, r7, lsl #1
  18f070:	e59f0178 	ldr	r0, [pc, #376]	; 18f1f0 <Read_SNES+0x30>
  18f074:	e0800006 	add	r0, r0, r6
  18f078:	e5901000 	ldr	r1, [r0]
  18f07c:	e3a02007 	mov	r2, #7
  18f080:	e1c11712 	bic	r1, r1, r2, lsl r7
  18f084:	e1a02005 	mov	r2, r5
  18f088:	e1811712 	orr	r1, r1, r2, lsl r7
  18f08c:	e5801000 	str	r1, [r0]
  18f090:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f094:	e1a0f003 	mov	pc, r3

0018f098 <Read_Data>:
  18f098:	e1a0300e 	mov	r3, lr
  18f09c:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18f0a0:	e3a09000 	mov	r9, #0
  18f0a4:	e3a0501c 	mov	r5, #28
  18f0a8:	eb000026 	bl	18f148 <Write_Clock>
  18f0ac:	e3a0501c 	mov	r5, #28
  18f0b0:	eb00002d 	bl	18f16c <Write_Latch>
  18f0b4:	e3a0500c 	mov	r5, #12
  18f0b8:	eb000034 	bl	18f190 <Wait>
  18f0bc:	e3a05028 	mov	r5, #40	; 0x28
  18f0c0:	eb000029 	bl	18f16c <Write_Latch>
  18f0c4:	e3a06000 	mov	r6, #0

0018f0c8 <pulseLoop>:
  18f0c8:	e3560010 	cmp	r6, #16
  18f0cc:	aa00000c 	bge	18f104 <endPulseLoop>
  18f0d0:	e3a05006 	mov	r5, #6
  18f0d4:	eb00002d 	bl	18f190 <Wait>
  18f0d8:	e3a05028 	mov	r5, #40	; 0x28
  18f0dc:	eb000019 	bl	18f148 <Write_Clock>
  18f0e0:	e3a05006 	mov	r5, #6
  18f0e4:	eb000029 	bl	18f190 <Wait>
  18f0e8:	eb000034 	bl	18f1c0 <Read_SNES>
  18f0ec:	e1a05615 	lsl	r5, r5, r6
  18f0f0:	e1899005 	orr	r9, r9, r5
  18f0f4:	e2866001 	add	r6, r6, #1
  18f0f8:	e3a0501c 	mov	r5, #28
  18f0fc:	eb000011 	bl	18f148 <Write_Clock>
  18f100:	eafffff0 	b	18f0c8 <pulseLoop>

0018f104 <endPulseLoop>:
  18f104:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f108:	e1a0f003 	mov	pc, r3

0018f10c <Check_Buttons>:
  18f10c:	e1a0300e 	mov	r3, lr
  18f110:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18f114:	e1a04009 	mov	r4, r9
  18f118:	e3a06000 	mov	r6, #0

0018f11c <checkButtonLoop>:
  18f11c:	e3560010 	cmp	r6, #16
  18f120:	aa000006 	bge	18f140 <finishButtonLoop>
  18f124:	e3a05001 	mov	r5, #1
  18f128:	e1a05615 	lsl	r5, r5, r6
  18f12c:	e1140005 	tst	r4, r5
  18f130:	0a000000 	beq	18f138 <continueButtonLoop>
  18f134:	e12fff32 	blx	r2

0018f138 <continueButtonLoop>:
  18f138:	e2866001 	add	r6, r6, #1
  18f13c:	eafffff6 	b	18f11c <checkButtonLoop>

0018f140 <finishButtonLoop>:
  18f140:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f144:	e1a0f003 	mov	pc, r3

0018f148 <Write_Clock>:
  18f148:	e1a0300e 	mov	r3, lr
  18f14c:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18f150:	e59f0098 	ldr	r0, [pc, #152]	; 18f1f0 <Read_SNES+0x30>
  18f154:	e0800005 	add	r0, r0, r5
  18f158:	e3a03001 	mov	r3, #1
  18f15c:	e1a03583 	lsl	r3, r3, #11
  18f160:	e5803000 	str	r3, [r0]
  18f164:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f168:	e1a0f003 	mov	pc, r3

0018f16c <Write_Latch>:
  18f16c:	e1a0300e 	mov	r3, lr
  18f170:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18f174:	e59f0074 	ldr	r0, [pc, #116]	; 18f1f0 <Read_SNES+0x30>
  18f178:	e0800005 	add	r0, r0, r5
  18f17c:	e3a03001 	mov	r3, #1
  18f180:	e1a03483 	lsl	r3, r3, #9
  18f184:	e5803000 	str	r3, [r0]
  18f188:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f18c:	e1a0f003 	mov	pc, r3

0018f190 <Wait>:
  18f190:	e1a0300e 	mov	r3, lr
  18f194:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18f198:	e59f0054 	ldr	r0, [pc, #84]	; 18f1f4 <Read_SNES+0x34>
  18f19c:	e2800004 	add	r0, r0, #4
  18f1a0:	e5903000 	ldr	r3, [r0]
  18f1a4:	e0834005 	add	r4, r3, r5

0018f1a8 <cycleLoop>:
  18f1a8:	e5903000 	ldr	r3, [r0]
  18f1ac:	e1530004 	cmp	r3, r4
  18f1b0:	aa000000 	bge	18f1b8 <cycleFinished>
  18f1b4:	eafffffb 	b	18f1a8 <cycleLoop>

0018f1b8 <cycleFinished>:
  18f1b8:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f1bc:	e1a0f003 	mov	pc, r3

0018f1c0 <Read_SNES>:
  18f1c0:	e1a0300e 	mov	r3, lr
  18f1c4:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18f1c8:	e59f0020 	ldr	r0, [pc, #32]	; 18f1f0 <Read_SNES+0x30>
  18f1cc:	e2800034 	add	r0, r0, #52	; 0x34
  18f1d0:	e5904000 	ldr	r4, [r0]
  18f1d4:	e3a03001 	mov	r3, #1
  18f1d8:	e1a03503 	lsl	r3, r3, #10
  18f1dc:	e1130004 	tst	r3, r4
  18f1e0:	03a05001 	moveq	r5, #1
  18f1e4:	13a05000 	movne	r5, #0
  18f1e8:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f1ec:	e1a0f003 	mov	pc, r3
  18f1f0:	3f200000 	.word	0x3f200000
  18f1f4:	3f003000 	.word	0x3f003000

0018f1f8 <main>:
  18f1f8:	e3a0d902 	mov	sp, #32768	; 0x8000
  18f1fc:	ebfffeda 	bl	18ed6c <EnableJTAG>
  18f200:	ebfffefc 	bl	18edf8 <InitFrameBuffer>
  18f204:	e3a07000 	mov	r7, #0
  18f208:	ebffff1a 	bl	18ee78 <clearScreen>
  18f20c:	eb0000fa 	bl	18f5fc <drawIntroScreen>
  18f210:	e3a05ffa 	mov	r5, #1000	; 0x3e8
  18f214:	ebffffdd 	bl	18f190 <Wait>
  18f218:	e3a05ffa 	mov	r5, #1000	; 0x3e8
  18f21c:	ebffffdb 	bl	18f190 <Wait>

0018f220 <StartGame>:
  18f220:	e3a07000 	mov	r7, #0
  18f224:	ebffff13 	bl	18ee78 <clearScreen>

0018f228 <InsertNewBlock>:
  18f228:	eb0000c6 	bl	18f548 <insertNewIBeam>
  18f22c:	e3a01000 	mov	r1, #0
  18f230:	e3a00f4b 	mov	r0, #300	; 0x12c
  18f234:	eb0000a9 	bl	18f4e0 <drawCurrentBlock>
  18f238:	eb000000 	bl	18f240 <moveBlockDown>
  18f23c:	eafffff9 	b	18f228 <InsertNewBlock>

0018f240 <moveBlockDown>:
  18f240:	e1a0300e 	mov	r3, lr
  18f244:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)

0018f248 <moveBlockLoop>:
  18f248:	eb000053 	bl	18f39c <CheckBlockMove>
  18f24c:	e3550000 	cmp	r5, #0
  18f250:	0a00004e 	beq	18f390 <NoMove>
  18f254:	e3a01000 	mov	r1, #0
  18f258:	e59f23c8 	ldr	r2, [pc, #968]	; 18f628 <haltLoop$+0x4>
  18f25c:	e5d22000 	ldrb	r2, [r2]
  18f260:	e59f03c4 	ldr	r0, [pc, #964]	; 18f62c <haltLoop$+0x8>
  18f264:	e7c01002 	strb	r1, [r0, r2]
  18f268:	e1a07002 	mov	r7, r2
  18f26c:	e3a06000 	mov	r6, #0

0018f270 <modLoop>:
  18f270:	e252200a 	subs	r2, r2, #10
  18f274:	ba000002 	blt	18f284 <endMod>
  18f278:	e2866001 	add	r6, r6, #1
  18f27c:	e1a07002 	mov	r7, r2
  18f280:	eafffffa 	b	18f270 <modLoop>

0018f284 <endMod>:
  18f284:	e3a01000 	mov	r1, #0
  18f288:	e1a06286 	lsl	r6, r6, #5
  18f28c:	e0811006 	add	r1, r1, r6
  18f290:	e3a00f4b 	mov	r0, #300	; 0x12c
  18f294:	e1a07287 	lsl	r7, r7, #5
  18f298:	e0811007 	add	r1, r1, r7
  18f29c:	eb00009c 	bl	18f514 <eraseCurrentBlock>
  18f2a0:	e59f2388 	ldr	r2, [pc, #904]	; 18f630 <haltLoop$+0xc>
  18f2a4:	e5d22000 	ldrb	r2, [r2]
  18f2a8:	e59f037c 	ldr	r0, [pc, #892]	; 18f62c <haltLoop$+0x8>
  18f2ac:	e7c01002 	strb	r1, [r0, r2]
  18f2b0:	e59f237c 	ldr	r2, [pc, #892]	; 18f634 <haltLoop$+0x10>
  18f2b4:	e5d22000 	ldrb	r2, [r2]
  18f2b8:	e59f036c 	ldr	r0, [pc, #876]	; 18f62c <haltLoop$+0x8>
  18f2bc:	e7c01002 	strb	r1, [r0, r2]
  18f2c0:	e59f2370 	ldr	r2, [pc, #880]	; 18f638 <haltLoop$+0x14>
  18f2c4:	e5d22000 	ldrb	r2, [r2]
  18f2c8:	e59f035c 	ldr	r0, [pc, #860]	; 18f62c <haltLoop$+0x8>
  18f2cc:	e7c01002 	strb	r1, [r0, r2]
  18f2d0:	e3a01001 	mov	r1, #1
  18f2d4:	e59f334c 	ldr	r3, [pc, #844]	; 18f628 <haltLoop$+0x4>
  18f2d8:	e5d32000 	ldrb	r2, [r3]
  18f2dc:	e282200a 	add	r2, r2, #10
  18f2e0:	e5c32000 	strb	r2, [r3]
  18f2e4:	e59f0340 	ldr	r0, [pc, #832]	; 18f62c <haltLoop$+0x8>
  18f2e8:	e7c01002 	strb	r1, [r0, r2]
  18f2ec:	e1a07002 	mov	r7, r2
  18f2f0:	e3a06000 	mov	r6, #0

0018f2f4 <modLoop2>:
  18f2f4:	e252200a 	subs	r2, r2, #10
  18f2f8:	ba000002 	blt	18f308 <endMod2>
  18f2fc:	e2866001 	add	r6, r6, #1
  18f300:	e1a07002 	mov	r7, r2
  18f304:	eafffffa 	b	18f2f4 <modLoop2>

0018f308 <endMod2>:
  18f308:	e3a01000 	mov	r1, #0
  18f30c:	e1a06286 	lsl	r6, r6, #5
  18f310:	e0811006 	add	r1, r1, r6
  18f314:	e3a00f4b 	mov	r0, #300	; 0x12c
  18f318:	e1a07287 	lsl	r7, r7, #5
  18f31c:	e0811007 	add	r1, r1, r7
  18f320:	eb00006e 	bl	18f4e0 <drawCurrentBlock>
  18f324:	e59f3304 	ldr	r3, [pc, #772]	; 18f630 <haltLoop$+0xc>
  18f328:	e5d32000 	ldrb	r2, [r3]
  18f32c:	e282200a 	add	r2, r2, #10
  18f330:	e5c32000 	strb	r2, [r3]
  18f334:	e59f02f0 	ldr	r0, [pc, #752]	; 18f62c <haltLoop$+0x8>
  18f338:	e7c01002 	strb	r1, [r0, r2]
  18f33c:	e59f32f0 	ldr	r3, [pc, #752]	; 18f634 <haltLoop$+0x10>
  18f340:	e5d32000 	ldrb	r2, [r3]
  18f344:	e282200a 	add	r2, r2, #10
  18f348:	e5c32000 	strb	r2, [r3]
  18f34c:	e59f02d8 	ldr	r0, [pc, #728]	; 18f62c <haltLoop$+0x8>
  18f350:	e7c01002 	strb	r1, [r0, r2]
  18f354:	e59f32dc 	ldr	r3, [pc, #732]	; 18f638 <haltLoop$+0x14>
  18f358:	e5d32000 	ldrb	r2, [r3]
  18f35c:	e282200a 	add	r2, r2, #10
  18f360:	e5c32000 	strb	r2, [r3]
  18f364:	e59f02c0 	ldr	r0, [pc, #704]	; 18f62c <haltLoop$+0x8>
  18f368:	e7c01002 	strb	r1, [r0, r2]
  18f36c:	e3a05ffa 	mov	r5, #1000	; 0x3e8
  18f370:	ebffff86 	bl	18f190 <Wait>
  18f374:	e3a05ffa 	mov	r5, #1000	; 0x3e8
  18f378:	ebffff84 	bl	18f190 <Wait>
  18f37c:	e3a05ffa 	mov	r5, #1000	; 0x3e8
  18f380:	ebffff82 	bl	18f190 <Wait>
  18f384:	e3a05ffa 	mov	r5, #1000	; 0x3e8
  18f388:	ebffff80 	bl	18f190 <Wait>
  18f38c:	eaffffad 	b	18f248 <moveBlockLoop>

0018f390 <NoMove>:
  18f390:	eb00002d 	bl	18f44c <CheckGameOver>
  18f394:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f398:	e1a0f003 	mov	pc, r3

0018f39c <CheckBlockMove>:
  18f39c:	e1a0300e 	mov	r3, lr
  18f3a0:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18f3a4:	e59f327c 	ldr	r3, [pc, #636]	; 18f628 <haltLoop$+0x4>
  18f3a8:	e5d32000 	ldrb	r2, [r3]
  18f3ac:	e282200a 	add	r2, r2, #10
  18f3b0:	e35200c8 	cmp	r2, #200	; 0xc8
  18f3b4:	aa00001f 	bge	18f438 <bottomOfGrid>
  18f3b8:	e59f026c 	ldr	r0, [pc, #620]	; 18f62c <haltLoop$+0x8>
  18f3bc:	e7d01002 	ldrb	r1, [r0, r2]
  18f3c0:	e3510001 	cmp	r1, #1
  18f3c4:	0a00001b 	beq	18f438 <bottomOfGrid>
  18f3c8:	e59f3260 	ldr	r3, [pc, #608]	; 18f630 <haltLoop$+0xc>
  18f3cc:	e5d32000 	ldrb	r2, [r3]
  18f3d0:	e282200a 	add	r2, r2, #10
  18f3d4:	e35200c8 	cmp	r2, #200	; 0xc8
  18f3d8:	aa000016 	bge	18f438 <bottomOfGrid>
  18f3dc:	e59f0248 	ldr	r0, [pc, #584]	; 18f62c <haltLoop$+0x8>
  18f3e0:	e7d01002 	ldrb	r1, [r0, r2]
  18f3e4:	e3510001 	cmp	r1, #1
  18f3e8:	0a000012 	beq	18f438 <bottomOfGrid>
  18f3ec:	e59f3240 	ldr	r3, [pc, #576]	; 18f634 <haltLoop$+0x10>
  18f3f0:	e5d32000 	ldrb	r2, [r3]
  18f3f4:	e282200a 	add	r2, r2, #10
  18f3f8:	e35200c8 	cmp	r2, #200	; 0xc8
  18f3fc:	aa00000d 	bge	18f438 <bottomOfGrid>
  18f400:	e59f0224 	ldr	r0, [pc, #548]	; 18f62c <haltLoop$+0x8>
  18f404:	e7d01002 	ldrb	r1, [r0, r2]
  18f408:	e3510001 	cmp	r1, #1
  18f40c:	0a000009 	beq	18f438 <bottomOfGrid>
  18f410:	e59f3220 	ldr	r3, [pc, #544]	; 18f638 <haltLoop$+0x14>
  18f414:	e5d32000 	ldrb	r2, [r3]
  18f418:	e282200a 	add	r2, r2, #10
  18f41c:	e35200c8 	cmp	r2, #200	; 0xc8
  18f420:	aa000004 	bge	18f438 <bottomOfGrid>
  18f424:	e59f0200 	ldr	r0, [pc, #512]	; 18f62c <haltLoop$+0x8>
  18f428:	e7d01002 	ldrb	r1, [r0, r2]
  18f42c:	e3510001 	cmp	r1, #1
  18f430:	0a000000 	beq	18f438 <bottomOfGrid>
  18f434:	ea000001 	b	18f440 <CanMove>

0018f438 <bottomOfGrid>:
  18f438:	e3a05000 	mov	r5, #0
  18f43c:	ea000000 	b	18f444 <endCheckBlock>

0018f440 <CanMove>:
  18f440:	e3a05001 	mov	r5, #1

0018f444 <endCheckBlock>:
  18f444:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f448:	e1a0f003 	mov	pc, r3

0018f44c <CheckGameOver>:
  18f44c:	e1a0300e 	mov	r3, lr
  18f450:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18f454:	e59f31cc 	ldr	r3, [pc, #460]	; 18f628 <haltLoop$+0x4>
  18f458:	e5d32000 	ldrb	r2, [r3]
  18f45c:	e352000a 	cmp	r2, #10
  18f460:	ba00000c 	blt	18f498 <GameIsOver>
  18f464:	e59f31c4 	ldr	r3, [pc, #452]	; 18f630 <haltLoop$+0xc>
  18f468:	e5d32000 	ldrb	r2, [r3]
  18f46c:	e352000a 	cmp	r2, #10
  18f470:	ba000008 	blt	18f498 <GameIsOver>
  18f474:	e59f31b8 	ldr	r3, [pc, #440]	; 18f634 <haltLoop$+0x10>
  18f478:	e5d32000 	ldrb	r2, [r3]
  18f47c:	e352000a 	cmp	r2, #10
  18f480:	ba000004 	blt	18f498 <GameIsOver>
  18f484:	e59f31ac 	ldr	r3, [pc, #428]	; 18f638 <haltLoop$+0x14>
  18f488:	e5d32000 	ldrb	r2, [r3]
  18f48c:	e352000a 	cmp	r2, #10
  18f490:	ba000000 	blt	18f498 <GameIsOver>
  18f494:	ea00000f 	b	18f4d8 <FinishCheckGameOver>

0018f498 <GameIsOver>:
  18f498:	e59f319c 	ldr	r3, [pc, #412]	; 18f63c <haltLoop$+0x18>
  18f49c:	e3a01000 	mov	r1, #0
  18f4a0:	e3a00f4b 	mov	r0, #300	; 0x12c
  18f4a4:	e3a04080 	mov	r4, #128	; 0x80
  18f4a8:	e3a05020 	mov	r5, #32
  18f4ac:	ebfffe8d 	bl	18eee8 <drawImage>
  18f4b0:	e59f3184 	ldr	r3, [pc, #388]	; 18f63c <haltLoop$+0x18>
  18f4b4:	e3a01020 	mov	r1, #32
  18f4b8:	e3a00f4b 	mov	r0, #300	; 0x12c
  18f4bc:	e3a04080 	mov	r4, #128	; 0x80
  18f4c0:	e3a05020 	mov	r5, #32
  18f4c4:	ebfffe87 	bl	18eee8 <drawImage>
  18f4c8:	e3a06001 	mov	r6, #1
  18f4cc:	e1a06286 	lsl	r6, r6, #5
  18f4d0:	e1a0b006 	mov	fp, r6
  18f4d4:	ea000052 	b	18f624 <haltLoop$>

0018f4d8 <FinishCheckGameOver>:
  18f4d8:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f4dc:	e1a0f003 	mov	pc, r3

0018f4e0 <drawCurrentBlock>:
  18f4e0:	e1a0300e 	mov	r3, lr
  18f4e4:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18f4e8:	e59f3150 	ldr	r3, [pc, #336]	; 18f640 <haltLoop$+0x1c>
  18f4ec:	e5d33000 	ldrb	r3, [r3]
  18f4f0:	e1a04003 	mov	r4, r3
  18f4f4:	e59f3148 	ldr	r3, [pc, #328]	; 18f644 <haltLoop$+0x20>
  18f4f8:	e5d33000 	ldrb	r3, [r3]
  18f4fc:	e1a05003 	mov	r5, r3
  18f500:	e59f3140 	ldr	r3, [pc, #320]	; 18f648 <haltLoop$+0x24>
  18f504:	e5933000 	ldr	r3, [r3]
  18f508:	ebfffe76 	bl	18eee8 <drawImage>
  18f50c:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f510:	e1a0f003 	mov	pc, r3

0018f514 <eraseCurrentBlock>:
  18f514:	e1a0300e 	mov	r3, lr
  18f518:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18f51c:	e59f311c 	ldr	r3, [pc, #284]	; 18f640 <haltLoop$+0x1c>
  18f520:	e5d33000 	ldrb	r3, [r3]
  18f524:	e1a04003 	mov	r4, r3
  18f528:	e59f3114 	ldr	r3, [pc, #276]	; 18f644 <haltLoop$+0x20>
  18f52c:	e5d33000 	ldrb	r3, [r3]
  18f530:	e1a05003 	mov	r5, r3
  18f534:	e59f3110 	ldr	r3, [pc, #272]	; 18f64c <haltLoop$+0x28>
  18f538:	e5933000 	ldr	r3, [r3]
  18f53c:	ebfffe69 	bl	18eee8 <drawImage>
  18f540:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f544:	e1a0f003 	mov	pc, r3

0018f548 <insertNewIBeam>:
  18f548:	e1a0400e 	mov	r4, lr
  18f54c:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
  18f550:	e59f00d0 	ldr	r0, [pc, #208]	; 18f628 <haltLoop$+0x4>
  18f554:	e3a01000 	mov	r1, #0
  18f558:	e5c01000 	strb	r1, [r0]
  18f55c:	e59f00cc 	ldr	r0, [pc, #204]	; 18f630 <haltLoop$+0xc>
  18f560:	e3a01001 	mov	r1, #1
  18f564:	e5c01000 	strb	r1, [r0]
  18f568:	e59f00c4 	ldr	r0, [pc, #196]	; 18f634 <haltLoop$+0x10>
  18f56c:	e3a01002 	mov	r1, #2
  18f570:	e5c01000 	strb	r1, [r0]
  18f574:	e59f00bc 	ldr	r0, [pc, #188]	; 18f638 <haltLoop$+0x14>
  18f578:	e3a01003 	mov	r1, #3
  18f57c:	e5c01000 	strb	r1, [r0]
  18f580:	e3a01001 	mov	r1, #1
  18f584:	e59f209c 	ldr	r2, [pc, #156]	; 18f628 <haltLoop$+0x4>
  18f588:	e5d22000 	ldrb	r2, [r2]
  18f58c:	e59f0098 	ldr	r0, [pc, #152]	; 18f62c <haltLoop$+0x8>
  18f590:	e7c01002 	strb	r1, [r0, r2]
  18f594:	e59f2094 	ldr	r2, [pc, #148]	; 18f630 <haltLoop$+0xc>
  18f598:	e5d22000 	ldrb	r2, [r2]
  18f59c:	e59f0088 	ldr	r0, [pc, #136]	; 18f62c <haltLoop$+0x8>
  18f5a0:	e7c01002 	strb	r1, [r0, r2]
  18f5a4:	e59f2088 	ldr	r2, [pc, #136]	; 18f634 <haltLoop$+0x10>
  18f5a8:	e5d22000 	ldrb	r2, [r2]
  18f5ac:	e59f0078 	ldr	r0, [pc, #120]	; 18f62c <haltLoop$+0x8>
  18f5b0:	e7c01002 	strb	r1, [r0, r2]
  18f5b4:	e59f207c 	ldr	r2, [pc, #124]	; 18f638 <haltLoop$+0x14>
  18f5b8:	e5d22000 	ldrb	r2, [r2]
  18f5bc:	e59f0068 	ldr	r0, [pc, #104]	; 18f62c <haltLoop$+0x8>
  18f5c0:	e7c01002 	strb	r1, [r0, r2]
  18f5c4:	e59f3070 	ldr	r3, [pc, #112]	; 18f63c <haltLoop$+0x18>
  18f5c8:	e59f2078 	ldr	r2, [pc, #120]	; 18f648 <haltLoop$+0x24>
  18f5cc:	e5823000 	str	r3, [r2]
  18f5d0:	e59f3078 	ldr	r3, [pc, #120]	; 18f650 <haltLoop$+0x2c>
  18f5d4:	e59f2070 	ldr	r2, [pc, #112]	; 18f64c <haltLoop$+0x28>
  18f5d8:	e5823000 	str	r3, [r2]
  18f5dc:	e3a03080 	mov	r3, #128	; 0x80
  18f5e0:	e59f2058 	ldr	r2, [pc, #88]	; 18f640 <haltLoop$+0x1c>
  18f5e4:	e5c23000 	strb	r3, [r2]
  18f5e8:	e3a03020 	mov	r3, #32
  18f5ec:	e59f5050 	ldr	r5, [pc, #80]	; 18f644 <haltLoop$+0x20>
  18f5f0:	e5c53000 	strb	r3, [r5]
  18f5f4:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
  18f5f8:	e1a0f004 	mov	pc, r4

0018f5fc <drawIntroScreen>:
  18f5fc:	e1a0300e 	mov	r3, lr
  18f600:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
  18f604:	e59f3048 	ldr	r3, [pc, #72]	; 18f654 <haltLoop$+0x30>
  18f608:	e3a01000 	mov	r1, #0
  18f60c:	e3a00000 	mov	r0, #0
  18f610:	e3a04b01 	mov	r4, #1024	; 0x400
  18f614:	e3a05c03 	mov	r5, #768	; 0x300
  18f618:	ebfffe32 	bl	18eee8 <drawImage>
  18f61c:	e49d3004 	pop	{r3}		; (ldr r3, [sp], #4)
  18f620:	e1a0f003 	mov	pc, r3

0018f624 <haltLoop$>:
  18f624:	eafffffe 	b	18f624 <haltLoop$>
  18f628:	0018ed5c 	.word	0x0018ed5c
  18f62c:	0018ec94 	.word	0x0018ec94
  18f630:	0018ed5d 	.word	0x0018ed5d
  18f634:	0018ed5e 	.word	0x0018ed5e
  18f638:	0018ed5f 	.word	0x0018ed5f
  18f63c:	0018ac94 	.word	0x0018ac94
  18f640:	0018ed68 	.word	0x0018ed68
  18f644:	0018ed69 	.word	0x0018ed69
  18f648:	0018ed60 	.word	0x0018ed60
  18f64c:	0018ed64 	.word	0x0018ed64
  18f650:	0018cc94 	.word	0x0018cc94
  18f654:	0000ac88 	.word	0x0000ac88
